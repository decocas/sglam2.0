{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/Components/login/login.component.ts","webpack:///src/app/Components/login/login.component.html","webpack:///src/app/Components/manager/manager.component.ts","webpack:///src/app/Components/manager/manager.component.html","webpack:///src/app/Components/outlets/outlets.component.ts","webpack:///src/app/Components/outlets/outlets.component.html","webpack:///src/app/Components/receipts/receipts.component.ts","webpack:///src/app/Components/receipts/receipts.component.html","webpack:///src/app/Components/reports/reports.component.ts","webpack:///src/app/Components/reports/reports.component.html","webpack:///src/app/Components/search/search.component.ts","webpack:///src/app/Components/search/search.component.html","webpack:///src/app/Guard/login.guard.ts","webpack:///src/app/Models/client.ts","webpack:///src/app/Pipes/paginate.pipe.ts","webpack:///src/app/Services/login.service.ts","webpack:///src/app/Services/operation.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","LoginComponent","angularFireAuth","router","loginService","_success","successMessage","subscribe","message","formulario","auth","signInWithEmailAndPassword","value","user","password","res","console","log","flag","navigate","err","next","reset","login","selector","templateUrl","styleUrls","ManagerComponent","searchNavigate","receiptNavigate","outletNavigate","reportNavigate","OutletsComponent","operationService","formBuilder","location","typeAlert","selected","submitted","pageNumber","pageSize","formGroup","group","orderNumber","required","codigo_producto","referencia","lote","cantidad","cliente","nit","nombre","fecha_caducidad","codigo_ONU","pipe","listarClientes","mercancia","event","codigoProducto","controls","trim","fecha","toUpperCase","i","length","setValue","toString","slice","back","getClients","clientList","selectedClient","searchNit","getClientByNit","push","error","_id","getClient","order","invalid","Date","postOutlet","JSON","stringify","getMerchandises","regresar","ReceiptsComponent","year","getFullYear","month","getMonth","date","getDate","displayMonths","placement","cantidad_buen_estado","serial_container","cantidad_mal_estado","observaciones","day","postReceipt","ReportsComponent","pageSizeClient","listarSalidas","getOutlets","salidas","vector","document","getElementsByTagName","file","File","innerText","type","listarBusqueda","SearchComponent","mail","email","telefono","responsable","postClient","listarMercancia","LoginGuard","state","providedIn","Client","entradas","PaginatePipe","array","name","LoginService","signOut","OperationService","http","indexRoute","receiptRoute","outletRoute","get","client","post","receipt","put","outlet","routes","path","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","pickGo","title","logOut","manager","AppModule","initializeApp","firebase","declarations","providers","bootstrap","environment","production","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport {Subject} from 'rxjs';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { LoginService } from 'src/app/Services/login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor( \n    public angularFireAuth:AngularFireAuth,\n    private router:Router,\n    public loginService:LoginService){\n\t    this._success.subscribe(message => this.successMessage = message);\n    }\n    private _success = new Subject<string>();\n    successMessage = ''\n  \n  ngOnInit(): void {\n  }\n\tlogin(formulario?:NgForm){\n\t\tif(formulario){\n\t\t\tthis.angularFireAuth.auth.signInWithEmailAndPassword(formulario.value.user, formulario.value.password)\n\t\t\t  .then( res => {\n\t\t\t    console.log(res);\n\t\t\t    this.loginService.flag = true;\n\t\t\t    this.router.navigate( ['/manager'] );\n\t\t\t  })\n\t\t\t  .catch( err =>{\n\t\t\t    console.log('err',err.message)\n    \t\t\tthis._success.next('Error, usuario o contraseña incorrectos.')\n\t\t\t    });\n\t\t\tformulario.reset();\n\t\t}\n\t}\n\n}\n","<div class=\"container\">\n\t<div class=\"d-flex justify-content-center h-100\">\n\t\t<div class=\"card\">\n\t\t\t<div class=\"card-header\">\n\t\t\t\t<h3>Sign In</h3>\n\t\t\t</div>\n\t\t\t<article class=\"card-body\">\n\t\t\t\t<form #loginForm=\"ngForm\" (ngSubmit)=\"login(loginForm)\">\t\n\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t    \t<label>User</label>\n\t\t\t\t        <input name=\"user\" ngModel class=\"form-control\" \n\t\t\t\t        \tplaceholder=\"Email\" type=\"email\">\n\t\t\t\t    </div> \n\t\t\t\t    <div class=\"form-group\">\n\t\t\t\t    \t<label>Password</label>\n\t\t\t\t        <input name=\"password\" ngModel class=\"form-control\" \n\t\t\t\t        \tplaceholder=\"******\" type=\"password\">\n\t\t\t\t    </div> \n  \t\t\t\t\t<ngb-alert *ngIf=\"successMessage\" type=\"danger\" (close)=\"successMessage = ''\">{{ successMessage }}</ngb-alert>  \n\t\t\t\t\t<div class=\"checkbox\">\n\t\t\t\t\t\t<label><input type=\"checkbox\"> Remember Me</label>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t<button class=\"btn btn-primary btn-block\"> \n\t\t\t\t\t\t\t<i class=\"glyphicon glyphicon-user\"> Login</i>\n\t\t\t\t\t\t</button> \n\t\t\t\t\t</div>\t\t\t\t  \t\n\t\t\t\t</form>\n\t\t\t</article>\n\t\t\t<div class=\"card-footer\">\n\t\t\t\t<div class=\"d-flex justify-content-center\">\n\t\t\t\t\t<a href=\"#\">Forgot your password?</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-manager',\n  templateUrl: './manager.component.html',\n  styleUrls: ['./manager.component.scss']\n})\nexport class ManagerComponent implements OnInit {\n\n  constructor(private router:Router) { }\n\n  ngOnInit() {\n  }\n\n  receiptNavigate(){\n    this.router.navigate(['/receipts']);\n  }\n\n  outletNavigate(){\n    this.router.navigate(['/outlets']);\n  }\n\n  searchNavigate(){\n    this.router.navigate(['/search']);\n  }\n\n  reportNavigate(){\n    this.router.navigate(['/reports'])\n  }\n}\n","<div class=\"container\">\n\n    <!-- Logo de la empresa -->\n      <br>\n      <div class=\"container\">\n        <h2 align=\"center\">Sistema de Gestión de Almacenamiento Logístico de Mercancías</h2>\n        <br> \n        <img src=\"https://ustvstaticcdn2-a.akamaihd.net/i/channel/picture/1/3/5/4/13549243/13549243_logo_expreso-01_1371046967,192x192,r:1.jpg\" class=\"mx-auto d-block\" width=\"250\" alt=\"expreso-andino Logo\" > \n        <br> \n      </div><!-- ./container brain-->\n    \n    <!-- Operaciones -->\n      <div class=\"card-deck\">\n        <div class=\"card bg-primary\">\n          <div class=\"card-body text-center\">\n            <button type=\"button\" class=\"btn\" routerLink=\"search\" (click)=\"searchNavigate()\">\n              <i class=\"glyphicon glyphicon-search tam-color\" ></i>\n            </button>\n            <p class=\"card-text text-white\"align=\"justify\">Búsqueda detallada de mercancía por cliente.</p>\n          </div>\n        </div><!-- ./card -->\n        <div class=\"card bg-success\">\n          <div class=\"card-body text-center\">\n            <button type=\"button\" class=\"btn\" routerlink=\"receipts\" (click)=\"receiptNavigate()\">\n              <i class=\"glyphicon glyphicon-plus tam-color\"></i>\n            </button>\n            <p class=\"card-text text-white\" align=\"justify\">Registrar ingreso de mercancía a la bodega de Expreso Andina de carga S.A.S. sede Cartagena de Indias.\n            </p>\n          </div>\n        </div> <!-- ./card -->\n        <div class=\"card bg-danger\">\n          <div class=\"card-body text-center\">\n            <button type=\"button\" class=\"btn\" routerLink=\"outlets\" (click)=\"outletNavigate()\">\n              <i class=\"fas fa-truck tam-color\"></i>\n            </button>\n            <p class=\"card-text text-white\"align=\"justify\">Registrar salida de mercancía de la bodega de Expreso Andino de carga S.A.S. sede Cartagena de Indias.\n            </p>\n          </div>\n        </div> <!-- ./card -->\n        <div class=\"card bg-primary\">\n          <div class=\"card-body text-center\">\n            <button type=\"button\" class=\"btn\" role=\"button\" routerLink=\"reports\" (click)=\"reportNavigate()\">\n              <i class=\"glyphicon glyphicon-save-file tam-color\"></i>\n            </button>\n            <p class=\"card-text text-white\" align=\"justify\">Generar informe detallado sobre almacenamiento de mercancías.</p>\n          </div>\n        </div><!-- ./card -->\n      </div><!-- ./card-desk -->\n    \n    </div>\n    ","import { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ReactiveFormsModule, NgForm } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport {debounceTime} from 'rxjs/operators';\nimport { Location } from '@angular/common';\nimport {Subject} from 'rxjs';\n\nimport { OperationService } from 'src/app/Services/operation.service';\nimport { Merchandise } from '../../Models/merchandise';\nimport { Client } from '../../Models/client';\n\n@Component({\n  selector: 'app-outlets',\n  templateUrl: './outlets.component.html',\n  styleUrls: ['./outlets.component.scss']\n})\nexport class OutletsComponent implements OnInit{\n\n  private _success = new Subject<string>();\n  successMessage = ''\n  selected:boolean\n  formGroup: FormGroup\n  submitted: boolean\n  pageSize: number\n  pageNumber: number\n  mercancia: Merchandise[]\n  typeAlert = 'success';\n\n  constructor( public operationService: OperationService,\n          private formBuilder: FormBuilder,\n          private location: Location) { \n    this.selected = false;\n    this.submitted = false;\n    this.pageNumber = 1;\n    this.pageSize = 15;    \n    this.formGroup = this.formBuilder.group({\n        orderNumber: ['', Validators.required],            \n        codigo_producto: ['', Validators.required],\n        referencia: ['', Validators.required],\n        lote: ['', Validators.required],\n        cantidad: ['', Validators.required],\n        cliente: '',\n        nit:'',\n        nombre:'',\n        fecha_caducidad:'',\n        codigo_ONU:''\n    });\n  //Alerta\n    this._success.subscribe(message => this.successMessage = message);\n    this._success.pipe(\n      debounceTime(5000)\n    ).subscribe(() => this.successMessage = '');\n  }\n\n  ngOnInit() {\n    this.listarClientes();\n    this.mercancia=[];\n  }\n\n  onKeyCode(event: KeyboardEvent) { // with type info\n    let codigoProducto: string = this.formGroup.controls['codigo_producto'].value;\n    codigoProducto = codigoProducto.trim();\n    let fecha: string = '';\n    let lote: string = this.formGroup.controls['lote'].value;\n    lote = lote.trim();\n    lote = lote.toUpperCase();\n\n    for (var i = 0; i < this.mercancia.length; ++i){\n      if(this.mercancia[i].code == codigoProducto){\n        this.formGroup.controls['referencia'].setValue(\n          this.mercancia[i].referencia\n        )\n      }\n      if(this.mercancia[i].lote == lote && this.mercancia[i].code == codigoProducto){\n        fecha = this.mercancia[i].fecha_caducidad.toString();\n        fecha = fecha.slice(0,10);\n        this.formGroup.controls['fecha_caducidad'].setValue(\n          fecha\n        )\n      }\n    }\n  }\n\n  onKeyLote(event: KeyboardEvent) { // with type info\n    let fecha: string\n    let codigoProducto: string\n    let lote: string\n\n    codigoProducto = this.formGroup.controls['codigo_producto'].value;\n    lote = this.formGroup.controls['lote'].value;\n    codigoProducto = codigoProducto.trim();\n    lote = lote.trim();\n    lote = lote.toUpperCase();\n    fecha = '';\n\n    for (var i = 0; i < this.mercancia.length; ++i){\n      if(this.mercancia[i].lote == lote && this.mercancia[i].code == codigoProducto){\n        fecha = this.mercancia[i].fecha_caducidad.toString();\n        this.formGroup.controls['fecha_caducidad'].setValue(\n          fecha.slice(0,10)\n        )\n      }\n    }\n  }\n\n  get f() { return this.formGroup.controls; }\n\n  regresar(){\n    this.location.back();\n  }\n\n  listarClientes(){\n  \tthis.operationService.getClients()\n  \t\t.subscribe( res =>{\n  \t\t\tthis.operationService.clientList = res as Client[];\n  \t\t});\n    this.operationService.selectedClient = null;\n  }\n  \n  listarClienteNit(formulario?:NgForm){\n\t\tif(formulario.value.searchNit){\n\t\t\tthis.operationService.getClientByNit(formulario.value.searchNit)\n\t\t\t\t.subscribe( res =>{\n          this.operationService.clientList = [];\n          this.operationService.clientList.push(res as Client);\n\t\t\t\t},\n        (error):void =>{\n          console.log(\"Error busqueda de Nit.\");\n          console.log(error);\n        },\n        ()=>{}\n        );\n\t\t}else{\n\t\t\tthis.listarClientes();\n\t\t}\n\t\tformulario.reset();\n\n\t}\n\n  pickClient(_id:string){\n   this.operationService.getClient(_id).subscribe( \n     res =>{\n       this.operationService.selectedClient = res as Client;\n       \n       this.selected = true;\n       this.formGroup.controls['cliente'].setValue(\n         this.operationService.selectedClient._id\n        );\n       this.formGroup.controls['nit'].setValue(\n         this.operationService.selectedClient.nit\n        );\n       this.formGroup.controls['nombre'].setValue(\n         this.operationService.selectedClient.nombre\n        );\n      }\n    );\n  }\n\n  registrarSalida(formulario?:FormGroup){\n    let order;\n    this.submitted = true;\n    if(this.formGroup.invalid || formulario.value.cantidad < 1){\n      if (formulario.value.cantidad < 1) {\n        this.formGroup.controls['cantidad'].setValue(\"\");\n      }\n      return;\n    }else if(formulario.value.cliente){\n      let fecha: string\n\n      this.submitted = false;\n      if(this.formGroup.controls['fecha_caducidad'].value){\n        fecha = this.formGroup.controls['fecha_caducidad'].value;\n        this.formGroup.controls['fecha_caducidad'].setValue(\n            new Date(\n              fecha.slice(0,4) + '-' +\n              fecha.slice(5,7) + '-' +\n              fecha.slice(8,10)\n            )\n        );\n      }else{\n        this.formGroup.controls['fecha_caducidad'].setValue(\n          new Date()\n        );\n      }\n      this.operationService.postOutlet(formulario.value).subscribe(\n        res =>{ \n          if (JSON.stringify({'status':'Outlet saved'}) === JSON.stringify(res)) {\n            this._success.next(\"Registro satisfactorio\");\n          }else{\n            this.typeAlert = 'danger';\n            this._success.next(\"Error, Datos incorrectos\");\n          }\n        },\n        (error):void =>{\n          console.log(error);\n          this.typeAlert = 'danger';\n          this._success.next(\"Error, Datos incorrectos\");\n        },\n        ()=>{}\n      );\n      order = formulario.value.orderNumber;\n    }\n    formulario.reset();\n\n    this.formGroup.controls['cliente'].setValue(\n        this.operationService.selectedClient._id\n      );\n    this.formGroup.controls['nit'].setValue(\n        this.operationService.selectedClient.nit\n      );\n    this.formGroup.controls['nombre'].setValue(\n        this.operationService.selectedClient.nombre\n      );\n    this.formGroup.controls['orderNumber'].setValue(order);\n  }\n\n  obtenerMercancia(_id:string){\n    this.operationService.getMerchandises(_id).subscribe( \n      res =>{\n        console.log(res);\n        this.mercancia = res as Merchandise[];\n        console.log(this.mercancia);\n      },\n      (error):void =>{\n        console.log(\"error de Mercancia\")\n        console.log(error)\n      },\n      ()=>{}\n    );\n  }\n\n  cancelar(formulario?:FormGroup){\n    this.selected = false;\n    this.submitted = false;\n    this.listarClientes()\n    formulario.reset()\n  }\n}","<div class=\"container\">\n    <ol class=\"breadcrumb color\">\n        <li><a type=\"button\" (click)=\"regresar()\"> Inicio</a></li>\n        <li class=\"active\"> - Registrar salida de mercancía</li>\n    </ol>\n\t<h1 class=\"text-center\">Registrar salida de mercancía</h1>\n\t<hr>\n    \n\t<div class=\"row\">\n\t\t<aside *ngIf=\"!selected\" class=\"col-sm-12\">\n            <div class=\"d-flex flex-row\">\n                <h4>Listado de clientes</h4>\n    \t        <form #searchForm=\"ngForm\" (ngSubmit)=\"listarClienteNit(searchForm)\" class=\"ml-auto\">\n                    <div class=\"input-group\">\n                        <!-- USE NIT TO SEARCH -->\n                        <input class=\"form-control\" id=\"search-nit\" name=\"searchNit\" \n                        \t\tngModel placeholder=\"Búsqueda por NIT\">\n                        <span class=\"input-group-btn\">\n                            <button class=\"btn btn-default\" type=\"submit\" >\n                                <i class=\"glyphicon glyphicon-search\"></i>\n                            </button>\n                        </span>\n                    </div>\n                </form>\n            </div><!-- d-flex flex-row.// -->\n\n\t        <div class=\"table-responsive\">\t                \n            \t<table id=\"mytable\" class=\"table table-bordred table-hover\">\n\t              \t<thead>\n\t              \t\t<th></th>\n\t                   \t<th>Nit.</th>\n\t                    <th>Razón social</th>\n\t                    <th>Contacto</th>\n\t                    <th>Email</th>\n\t                    <th>Teléfono</th>\n\t                </thead>\n\t\t\t\t\t<tbody *ngFor=\"let cliente of operationService.clientList | paginate:pageSize:pageNumber\">\n\t\t\t\t\t\t<tr>\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<td>\n                                 <a class=\"btn btn-link btn-sm\" (click)=\"pickClient(cliente._id)\" (click)=\"obtenerMercancia(cliente._id)\">\n                                        <i class=\"fas fa-hand-pointer\"></i>                                                                     \n                                    </a>\n                            </td>\n\t\t\t\t\t\t\t<td>{{cliente.nit}}</td>\n\t\t\t\t\t\t\t<td>{{cliente.nombre}}</td>\n\t\t\t\t\t\t\t<td>{{cliente.responsable}}</td>\n\t\t\t\t\t\t\t<td>{{cliente.mail}}</td>\n\t\t\t\t\t\t\t<td>{{cliente.telefono}}</td>\n\t\t\t\t\t\t</tr>\n\t\t    \t\t</tbody>\n\t    \t\t</table>\n                <ngb-pagination class=\"d-flex justify-content-end\" [collectionSize]=\"operationService.clientList.length\" [(page)]=\"pageNumber\" [pageSize]=\"pageSize\" [maxSize]=\"3\" [rotate]=\"true\"></ngb-pagination>\n\t    \t</div>\n\t\t</aside> <!-- col.// -->\n\n\t\t<aside *ngIf=\"selected\" class=\"col-sm-12\">\n            <ngb-alert *ngIf=\"successMessage\" [type]=\"typeAlert\" (close)=\"successMessage = ''\">{{ successMessage }}</ngb-alert>     \n\t\t\t<!-- Formulario con ingreso de datos -->\n\t\t\t<form [formGroup]=\"formGroup\" (ngSubmit)=\"registrarSalida(formGroup)\">\n                <input type=\"hidden\" formControlName=\"cliente\">\n                <div class=\"form-row\"> \n                    <label>Código orden de salida</label>\n                    <input type=\"text\" class=\"form-control\" formControlName=\"orderNumber\" placeholder=\"Código orden de salida\"[ngClass]=\"{ 'is-invalid': submitted && f.orderNumber.errors }\">\n                </div><!-- form-row.// -->\n                <div class=\"form-row\"> \n                    <div class=\"form-group col-sm-6\">\n                        <label>Nit</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"nit\" readonly>\n                    </div>\n                    <div class=\"form-group col-sm-6\">\n                        <label>Razón social</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"nombre\" readonly>\n                    </div>\n                </div><!-- form-row.// -->\n                <div class=\"form-row\"> \n                    <div class=\"form-group col-sm-6\">\n                        <label>Código del Producto</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"codigo_producto\" placeholder=\"Código del producto\" [ngClass]=\"{ 'is-invalid': submitted && f.codigo_producto.errors }\" (keyup)=\"onKeyCode($event)\">\n                    </div>\n                    <div class=\"form-group col-sm-6\">\n                        <label>Nombre del producto</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"referencia\" placeholder=\"Nombre del producto\" readonly>\n                    </div>\n                </div><!-- form-row.// -->\n                <div class=\"form-row\"> \n                    <div class=\"form-group col-sm-6\">\n                        <label>Lote del Producto</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"lote\" placeholder=\"Lote del producto\" [ngClass]=\"{ 'is-invalid': submitted && f.lote.errors }\" (keyup)=\"onKeyLote($event)\">\n                    </div>\n                    <div class=\"form-group col-sm-6\">\n                        <label>Código ONU</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"codigo_ONU\" placeholder=\"Código ONU\">\n                    </div>\n                </div><!-- form-row.// -->\n                <div class=\"form-row\"> \n                    <div class=\"form-group col-sm-6\">\n                        <label>Cantidad</label>\n                        <input type=\"number\" min=\"1\" class=\"form-control\" formControlName=\"cantidad\" [ngClass]=\"{ 'is-invalid': submitted && f.cantidad.errors }\">\n                    </div>\n                    <div class=\"form-group col-sm-6\">\n                        <label>Fecha de caducidad</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"fecha_caducidad\" placeholder=\"aaaa/mm/dd\" readonly>\n                    </div>\n                </div><!-- form-row.// -->\n                <div class=\"form-action-row\" align=\"center\">\n                    <button type=\"submit\" class=\"btn btn-primary btn-xl\">\n                        <span class=\"glyphicon glyphicon-floppy-disk\"></span> Guardar\n                    </button>\n                    <button type=\"button\" class=\"btn btn-danger btn-xl\" (click)=\"cancelar(formGroup)\"> Cancelar</button> \n                </div><!-- form-action-row.// -->\n\t\t\t</form>\n\t\t</aside> <!-- col.// -->\n\t</div> <!-- row.// -->\n\n</div> <!-- container.// -->","import { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ReactiveFormsModule, NgForm } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport { debounceTime } from 'rxjs/operators';\nimport { Location } from '@angular/common';\nimport { Subject } from 'rxjs';\n\nimport { OperationService } from 'src/app/Services/operation.service';\nimport { Merchandise } from '../../Models/merchandise';\nimport { Client } from '../../Models/client';\n\n@Component({\n  selector: 'app-receipts',\n  templateUrl: './receipts.component.html',\n  styleUrls: ['./receipts.component.scss']\n})\nexport class ReceiptsComponent implements OnInit {\n  \n  private _success = new Subject<string>();\n  successMessage = ''\n  selected:boolean\n  formGroup: FormGroup\n  submitted: boolean\n  pageSize: number\n  pageNumber: number\n  year: number = new Date().getFullYear();\n  month: number = new Date().getMonth() + 1;\n  date: number = new Date().getDate();\n  displayMonths = 2;\n  placement = 'top';\n  typeAlert = 'success';\n\n  constructor(public operationService:OperationService,\n          private formBuilder: FormBuilder,\n          private location: Location) {\n    this.selected = false; \n    this.submitted = false;\n    this.pageNumber = 1;\n    this.pageSize = 15;\n    this.formGroup = this.formBuilder.group({\n        orderNumber: ['', Validators.required],            \n        codigo_producto: ['', Validators.required],\n        referencia: ['', Validators.required],\n        lote: ['', Validators.required],\n        cantidad_buen_estado: ['', Validators.required],\n        serial_container: ['', Validators.required],\n        cantidad_mal_estado:'',\n        fecha_caducidad: '',\n        observaciones:'',\n        codigo_ONU:'',\n        nit:'',\n        cliente:'',\n        nombre:''\n    });\n\n    //Alertas\n    this._success.subscribe(\n        message => this.successMessage = message\n      );\n    this._success.pipe(\n        debounceTime(5000)\n      ).subscribe(\n        () => this.successMessage = ''\n      );\n    //fin alertas\n  }\n\n  ngOnInit() {\n  \tthis.listarClientes();\n  }\n\n  get f() { return this.formGroup.controls; }\n\n  regresar(){\n    this.location.back();\n  }\n\n  listarClientes(){\n  \tthis.operationService.getClients()\n  \t\t.subscribe( res =>{\n  \t\t\tthis.operationService.clientList = res as Client[];\n  \t\t});\n    this.operationService.selectedClient = null;\n  }\n\n  listarClienteNit(formulario?:NgForm){\n\t\tif(formulario.value.searchNit){\n\t\t\tthis.operationService.getClientByNit(formulario.value.searchNit)\n\t\t\t\t.subscribe( res =>{\n          this.operationService.clientList = [];\n\t\t\t\t  this.operationService.clientList.push(res as Client);\n\t\t\t\t},\n        (error):void =>{\n          console.log(\"Error busqueda de Nit.\");\n          console.log(error);\n        },\n        ()=>{}\n        );\n\t\t}else{\n\t\t\tthis.listarClientes();\n\t\t}\n\t\tformulario.reset();\n\t}\n\n   pickClient(_id:string){\n   \t\tthis.operationService.getClient(_id)\n   \t\t\t.subscribe( res =>{\n   \t\t\t\tthis.operationService.selectedClient = res as Client;\n          this.selected = true;\n          this.formGroup.controls['cliente'].setValue(this.operationService.selectedClient._id);\n          this.formGroup.controls['nit'].setValue(this.operationService.selectedClient.nit);\n          this.formGroup.controls['nombre'].setValue(this.operationService.selectedClient.nombre);\n   \t\t\t});\n\t}\n\n  registrarEntrada(formulario?:FormGroup){\n    let code;\n    this.submitted = true;\n    console.log(this.formGroup.controls['fecha_caducidad'].value)\n    if (formulario.value.cantidad_mal_estado < 0) {\n      this.formGroup.controls['cantidad_mal_estado'].setValue(\"\");\n      if(formulario.value.cantidad_buen_estado < 1){\n        this.formGroup.controls['cantidad_buen_estado'].setValue(\"\");\n      }\n      return;\n    }else if(this.formGroup.invalid || formulario.value.cantidad_buen_estado < 1) {\n      if(formulario.value.cantidad_buen_estado < 1){\n        this.formGroup.controls['cantidad_buen_estado'].setValue(\"\");\n      }\n      return;\n    }else if(formulario.value.cliente){\n      this.submitted = false;\n      if(this.formGroup.controls['fecha_caducidad'].value){\n        this.formGroup.controls['fecha_caducidad'].setValue(\n          new Date(\n            formulario.value.fecha_caducidad.year + '-' +\n            formulario.value.fecha_caducidad.month + '-' +\n            formulario.value.fecha_caducidad.day\n          )\n        );\n      }else{\n        this.formGroup.controls['fecha_caducidad'].setValue(new Date());\n      }\n  \t\tthis.operationService.postReceipt(formulario.value).subscribe(\n        res=>{\n          if (JSON.stringify({'status':'Receipt saved'}) === JSON.stringify(res)) {\n            this._success.next(\"Registro satisfactorio\")\n          }else{\n            this.typeAlert = 'danger';\n            this._success.next(\"Error, Datos incorrectos\")\n          }\n        },\n        (error):void =>{\n          console.log(error);\n          this.typeAlert = 'danger';\n          this._success.next(\"Error, Datos incorrectos\");\n        },\n        ()=>{}\n        );\n      code = formulario.value.orderNumber;\n\t  }\n    \n\t  formulario.reset();\n    this.formGroup.controls['cliente'].setValue(this.operationService.selectedClient._id);\n    this.formGroup.controls['nit'].setValue(this.operationService.selectedClient.nit);\n    this.formGroup.controls['nombre'].setValue(this.operationService.selectedClient.nombre);\n    this.formGroup.controls['orderNumber'].setValue(code);\n  }\n\n  cancelar(){\n    this.selected = false;\n    this.submitted = false;\n    this.listarClientes();\n    this.formGroup.controls['fecha_caducidad'].setValue(\"\");\n  }\n\n}\n//  WHS155671 005717 EMULSION ASFALTICA ECO*18 KG V061771 115 TGZ198","<div class=\"container\">\n    <ol class=\"breadcrumb color\">\n        <li><a type=\"button\" (click)=\"regresar()\"> Inicio</a></li>\n        <li class=\"active\"> - Registrar ingreso de mercancía</li>\n    </ol>\n\t<h1 class=\"text-center\">Registrar ingreso de mercancía</h1>\n    <hr>\n\n\t<div class=\"row\">\n\t\t<aside *ngIf=\"!selected\" class=\"col-sm-12\">\n            <div class=\"d-flex flex-row\">\n                <h4>Listado de clientes</h4>\n    \t        <form #searchForm=\"ngForm\" (ngSubmit)=\"listarClienteNit(searchForm)\" class=\"ml-auto\">\n                    <div class=\"input-group\">\n                        <!-- USE NIT TO SEARCH -->\n                        <input class=\"form-control\" id=\"search-nit\" name=\"searchNit\" \n                        \t\tngModel placeholder=\"Búsqueda por NIT\">\n                        <span class=\"input-group-btn\">\n                            <button class=\"btn btn-default\" type=\"submit\" >\n                                <i class=\"glyphicon glyphicon-search\"></i>\n                            </button>\n                        </span>\n                    </div>\n                </form>\n            </div><!-- d-flex flex-row.// -->\n\n\t        <div class=\"table-responsive\">\t                \n            \t<table id=\"mytable\" class=\"table table-bordred table-hover\">\n\t              \t<thead>\n\t              \t\t<th></th>\n\t                   \t<th>Nit.</th>\n\t                    <th>Razon social</th>\n\t                    <th>Contacto</th>\n\t                    <th>Email</th>\n\t                    <th>Telefono</th>\n\t                </thead>\n\t\t\t\t\t<tbody *ngFor=\"let cliente of operationService.clientList | paginate:pageSize:pageNumber\">\n\t\t\t\t\t\t<tr>\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t <a class=\"btn btn-link btn-sm\" (click)=\"pickClient(cliente._id)\">\n                                        <i class=\"fas fa-hand-pointer\"></i>\n                                    </a>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>{{cliente.nit}}</td>\n\t\t\t\t\t\t\t<td>{{cliente.nombre}}</td>\n\t\t\t\t\t\t\t<td>{{cliente.responsable}}</td>\n\t\t\t\t\t\t\t<td>{{cliente.mail}}</td>\n\t\t\t\t\t\t\t<td>{{cliente.telefono}}</td>\n\t\t\t\t\t\t</tr>\n\t\t    \t\t</tbody>\n\t    \t\t</table>\n                <ngb-pagination class=\"d-flex justify-content-end\" [collectionSize]=\"operationService.clientList.length\" [(page)]=\"pageNumber\" [pageSize]=\"pageSize\" [maxSize]=\"3\" [rotate]=\"true\"></ngb-pagination>\n\t    \t</div>\n\t\t</aside> <!-- col.// -->\n\n\t\t<aside *ngIf=\"selected\" class=\"col-sm-12\">\n            <ngb-alert *ngIf=\"successMessage\" [type]=\"typeAlert\" (close)=\"successMessage = ''\">{{ successMessage }}</ngb-alert>\n\t\t\t<!-- Formulario con ingreso de datos -->\n\t\t\t<form [formGroup]=\"formGroup\" (ngSubmit)=\"registrarEntrada(formGroup)\">\n\t\t\t\t<input type=\"hidden\" formControlName=\"cliente\">\n\t\t\t\t<div class=\"form-row\"> \n\t\t\t\t\t<label>Codigo orden de entrada</label>\n                    <input type=\"text\" formControlName=\"orderNumber\" class=\"form-control\" placeholder=\"Codigo orden de entrada\" [ngClass]=\"{ 'is-invalid': submitted && f.orderNumber.errors }\">\n                </div><!-- form-row.// -->\n                <div class=\"form-row\"> \n                    <div class=\"form-group col-sm-6\">\n                        <label>Nit</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"nit\" readonly>\n                    </div>\n                    <div class=\"form-group col-sm-6\">\n                        <label>Razon social</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"nombre\" readonly>\n                    </div>\n                </div><!-- form-row.// -->\n\t\t\t\t<div class=\"form-row\">\n                    <div class=\"form-group col-sm-6\">\n                        <label>Codigo del Producto</label>\n                        <input type=\"text\" formControlName=\"codigo_producto\" class=\"form-control\" placeholder=\"Codigo del producto\" [ngClass]=\"{ 'is-invalid': submitted && f.codigo_producto.errors }\">\n                    </div>\n                    <div class=\"form-group col-sm-6\">\n                        <label>Nombre del producto</label>\n                        <input type=\"text\" formControlName=\"referencia\" class=\"form-control\" placeholder=\"Nombre del producto\" [ngClass]=\"{ 'is-invalid': submitted && f.referencia.errors }\">\n                    </div>\n                </div><!-- form-row.// -->\n                <div class=\"form-row\"> \n                    <div class=\"form-group col-sm-6\">\n                        <label>Lote del Producto</label>\n                        <input type=\"text\" formControlName=\"lote\" class=\"form-control\" placeholder=\"Lote del producto\" [ngClass]=\"{ 'is-invalid': submitted && f.lote.errors }\">\n                    </div>\n                    <div class=\"form-group col-sm-6\">\n                        <label>Codigo ONU</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"codigo_ONU\" placeholder=\"Codigo ONU\">\n                    </div>\n                </div><!-- form-row.// -->\n                <div class=\"form-row\"> \n                    <div class=\"form-group col-sm-6\">\n                        <label>Cantidad en buen estado</label>\n                        <input type=\"number\" min=\"1\" formControlName=\"cantidad_buen_estado\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.cantidad_buen_estado.errors }\">\n                    </div>\n                    <div class=\"form-group col-sm-6\">\n                        <label>Cantidad deteriorada</label>\n                        <input type=\"number\" min=\"0\" class=\"form-control\" formControlName=\"cantidad_mal_estado\">\n                    </div>\n                </div><!-- form-row.// -->\n                <div class=\"form-row\"> \n                    <div class=\"form-group col-sm-6\">\n                        <label>Numero del contenedor</label>\n                        <input type=\"text\" formControlName=\"serial_container\" class=\"form-control\" placeholder=\"Numero del contenedor\" [ngClass]=\"{ 'is-invalid': submitted && f.serial_container.errors }\">\n                    </div>\n                    <div class=\"form-group col-sm-6\">\n                        <label>Fecha de caducidad</label>\n                        <div class=\"input-group\">\n                            <input type=\"date\" class=\"form-control\" formControlName=\"fecha_caducidad\" placeholder=\"aaaa/mm/dd\" ngbDatepicker #picker=\"ngbDatepicker\" [minDate]= \"{year: year, month: month, day: date}\" (click)=\"picker.toggle()\" [displayMonths]=\"displayMonths\" [placement]=\"placement\" readonly>\n                            <span class=\"input-group-btn\">\n                               <button class=\"btn btn-default\" (click)=\"picker.toggle()\" type=\"button\">\n                                    <i class=\"glyphicon glyphicon-calendar\"></i>\n                                </button>\n                            </span>\n                        </div>\n                    </div>\n                </div><!-- form-row.// -->\n                <div class=\"form-group\">\n\t\t\t\t  <label >Observaciones</label>\n\t\t\t\t  <textarea class=\"form-control\" rows=\"5\" formControlName=\"observaciones\" ></textarea>\n\t\t\t\t</div>\n                <div class=\"form-action-row\" align=\"center\">\n                    <button type=\"submit\" class=\"btn btn-primary btn-xl\">\n                        <span class=\"glyphicon glyphicon-floppy-disk\"></span> Guardar\n                    </button>\n                    <button type=\"button\" class=\"btn btn-danger btn-xl\" (click)=\"cancelar()\"> Cancelar</button>  \n                </div><!-- form-action-row.// -->\n\t\t\t</form>\n\t\t</aside> <!-- col.// -->\n\t</div> <!-- row.// -->\n\n</div> <!-- container.// -->\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { saveAs } from 'file-saver';\nimport { Location } from '@angular/common';\n\nimport { OperationService } from 'src/app/Services/operation.service';\nimport { Client } from 'src/app/Models/client';\n\n@Component({\n  selector: 'app-reports',\n  templateUrl: './reports.component.html',\n  styleUrls: ['./reports.component.scss']\n})\nexport class ReportsComponent implements OnInit {\n\n  pageSize: number;\n  pageSizeClient: number;\n  pageNumber: number;\n  \nconstructor(public operationService: OperationService,\n      private location: Location) {\nthis.pageNumber = 1;\nthis.pageSize = 20;\nthis.pageSizeClient = 5;\n }\n\nngOnInit() {\n  this.listarClientes();\n}\n\nregresar(){\n  this.location.back();\n}\n\nlistarClientes(){\n  this.operationService.getClients().subscribe( res =>{\n    this.operationService.clientList = res as Client[];\n  });\n  this.operationService.selectedClient = null;\n}\n\nlistarBusqueda(formulario?:NgForm){\n  if(formulario.value.searchNit){\n    this.operationService.getClientByNit(formulario.value.searchNit)\n      .subscribe( res =>{\n        this.operationService.clientList = res as Client[];\n        this.listarSalidas(this.operationService.clientList[0]._id);\n      });\n  }else{\n    this.listarClientes();\n  }\n  formulario.reset();\n}\n\n pickClient(_id:string){\n     this.operationService.getClient(_id)\n       .subscribe( res =>{\n         this.operationService.selectedClient = res as Client;\n       });\n     this.listarSalidas(_id);\n}\n\nlistarSalidas(id:string){\n  this.operationService.getClient(id)\n    .subscribe( res =>{\n      this.operationService.selectedClient = res as Client;\n      this.operationService.getOutlets(id)\n        .subscribe( res =>{\n          this.operationService.selectedClient.salidas = res;\n        });\n    });\n}\n\nSaveDemo() {\n  let vector = document.getElementsByTagName(\"table\");\n  let file = new File(\n      [('   ' + vector[1].innerText + '\\n')],\n      \"test.xls\" ,{ type: 'text/plain;charset=utf-8'}\n    );\n  saveAs(file);\n}\n}\n","<div class=\"container\">\n    <ol class=\"breadcrumb color\">\n        <li><a type=\"button\" (click)=\"regresar()\"> Inicio</a></li>\n        <li class=\"active\"> - Generar informe</li>\n    </ol>\n\t<h1 class=\"text-center\">Generar informe</h1>\n\t<hr>\n\n\t<div class=\"row\">\n\t\t<div class=\"col-lg-12\">\n            <div class=\"d-flex flex-row\">\n\t\t        <h4>Listado de clientes</h4>\n\t\t        <div class=\"ml-auto\">\n\t\t\t        <form #searchNitForm=\"ngForm\" (ngSubmit)=\"listarBusqueda(searchNitForm)\">\n\t\t                <div class=\"input-group\">\n\t\t                    <!-- USE NIT TO SEARCH -->\n\t\t                    <input class=\"form-control col-sm-9\" id=\"search-nit\" name=\"searchNit\" \n\t\t                     ngModel placeholder=\"Búsqueda por NIT\" required>\n\t\t                    <span class=\"input-group-btn-sm-4\">\n\t\t                        <button class=\"btn btn-default\" type=\"submit\" >\n\t\t                        \t<i class=\"glyphicon glyphicon-search\"></i>\n\t\t                        </button>\n\t\t                    </span>\n\t\t                </div>\n\t\t            </form>\n\t\t        </div><!-- ml-auto.// -->\n\t\t\t</div><!-- d-flex flex-row.// -->\n\t        <div class=\"table-responsive\">\t                \n            \t<table id=\"mytable\" class=\"table table-bordred table-striped\">\n\t              \t<thead>\n\t              \t\t<th></th>\n\t                   \t<th>Nit.</th>\n\t                    <th>Razón social</th>\n\t                    <th>Contacto</th>\n\t                    <th>Email</th>\n\t                    <th>Teléfono</th>\n\t                </thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t<tr *ngFor=\"let cliente of operationService.clientList | paginate:pageSizeClient:pageNumber\">\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t <a class=\"btn btn-link btn-sm\" (click)=\"pickClient(cliente._id)\">\n                                        <i class=\"fas fa-hand-pointer\"></i>\n                                    </a>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>{{cliente.nit}}</td>\n\t\t\t\t\t\t\t<td>{{cliente.nombre}}</td>\n\t\t\t\t\t\t\t<td>{{cliente.responsable}}</td>\n\t\t\t\t\t\t\t<td>{{cliente.mail}}</td>\n\t\t\t\t\t\t\t<td>{{cliente.telefono}}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</tbody>\n\t    \t\t</table>\n                <ngb-pagination class=\"d-flex justify-content-end\" [collectionSize]=\"operationService.clientList.length\" [(page)]=\"pageNumber\" [pageSize]=\"pageSizeClient\" [maxSize]=\"3\" [rotate]=\"true\"></ngb-pagination>\n\t    \t</div>\n\t\t<br>\n\t\t<br>\n\t\t<footer>\n\t\t\t<div class=\"table-responsive\">\t                \n            \t<table id=\"mytable\" class=\"table table-bordred table-striped\">\n\t              \t<thead>\n\t\t\t\t\t\t<th>Código</th>\n\t\t\t\t\t\t<th>Referencia</th>\n\t\t\t\t\t\t<th>Lote</th>\n\t\t\t\t\t\t<th>Cantidad</th>\n\t\t\t\t\t\t<th>Código ONU</th>\n\t\t\t\t\t\t<th>Fecha Caducidad</th>\n\t\t\t\t\t\t<th>Fecha Salida</th>\n\t\t\t\t\t\n\t                </thead>\n\t\t\t\t\t<tbody  *ngIf=\"this.operationService.selectedClient\">\n\t\t\t\t\t\t<tr *ngFor=\"let salida of this.operationService.selectedClient.salidas | paginate:pageSize:pageNumber\">\n\t\t\t\t\t\t\t<td>{{salida.codigo_producto}}</td>\n\t\t\t\t\t\t\t<td>{{salida.referencia}}</td>\n\t\t\t\t\t\t\t<td>{{salida.lote}}</td>\n\t\t\t\t\t\t\t<td>{{salida.cantidad}}</td>\n\t\t\t\t\t\t\t<td>{{salida.codigo_ONU}}</td>\n                            <td *ngIf=\"salida.fecha_caducidad\">\n                                {{salida.fecha_caducidad.substring(0,10)}}\n                            </td>\n                            <td *ngIf=\"!salida.fecha_caducidad\">\n                                {{salida.fecha_caducidad}}\n                            </td>\n                            <td *ngIf=\"salida.fecha_salida\">\n                                {{salida.fecha_salida.substring(0,10)}}\n                            </td>\n                            <td *ngIf=\"!salida.fecha_salida\">\n                                {{salida.fecha_salida}}\n                            </td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<a id=\"boton\" role=\"button\" class=\"btn btn-sm\"  (click)=\"SaveDemo()\">\n\t\t\t\t\t\t\t\t\t<i class=\"glyphicon glyphicon-download\"></i>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</td>\t\t\t\t\t\t\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</tbody>\n\t    \t\t</table>\n                <ngb-pagination *ngIf=\"this.operationService.selectedClient\" class=\"d-flex justify-content-end\" [collectionSize]=\"operationService.selectedClient.salidas.length\" [(page)]=\"pageNumber\" [pageSize]=\"pageSize\" [maxSize]=\"3\" [rotate]=\"true\"></ngb-pagination>\n\t    \t</div>\n\t\t</footer>\n\t\t\n\t\t</div> <!-- col.// -->\n\t\t\n\t</div> <!-- row.// -->\n\n</div> <!-- container.// -->\n\n","import { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Location } from '@angular/common';\n\nimport { OperationService } from 'src/app/Services/operation.service';\nimport { Client } from 'src/app/Models/client';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss']\n})\nexport class SearchComponent implements OnInit {\n\n\tnew: boolean;\n\tformGroup: FormGroup;\n    submitted = false;\n    //edit = false;\n    id:string;\n  \tpageSize: number;\n  \tpageSizeClient: number;\n  \tpageNumber: number;\n\n  constructor(public operationService:OperationService,\n  \t\t\t  private formBuilder: FormBuilder,\n  \t\t\t  private location: Location) {\n\t    this.new = false;\n\t\tthis.pageNumber = 1;\n\t\tthis.pageSize = 20;\n\t\tthis.pageSizeClient = 10;\n    }\n\n  ngOnInit() {\n  \tthis.listarClientes();\n    this.formGroup = this.formBuilder.group({\n        nombre: ['', Validators.required],            \n        mail: ['', [Validators.required, Validators.email]],\n        nit: ['', Validators.required],\n        telefono: ['', Validators.required],\n        responsable: ['', Validators.required]\n    });\n  }\n\n  get f() { return this.formGroup.controls; }\n\n  nuevoCliente() {\n    this.new = true;\n/*\tthis.formGroup.get['cliente'].enable();\n\tthis.formGroup.get['nit'].enable();\n\tthis.formGroup.get['nombre'].enable();\n  */}\n\n  cancelar() {\n  \tthis.new = false;\n  \t//this.edit = false;\n  }\n\n  listarClientes(){\n  \tthis.operationService.getClients()\n  \t\t.subscribe( res =>{\n  \t\t\tthis.operationService.clientList = res as Client[];\n  \t\t});\n\tthis.operationService.selectedClient = null;\n  }\n\n\tregistrarCliente(formulario?:FormGroup){\n\t\tthis.submitted = true;\n\n\t\tif(this.formGroup.invalid){\n\t\t\treturn;\n\t\t}/*else if (formulario && this.edit) {\n\t\t\tthis.operationService.putClient(formulario.value);\n\t\t\tformulario.reset();\n\t\t\tthis.new = false;\n\t\t}*/else if(formulario){\n\t    \tthis.operationService.postClient( formulario.value )\n\t\t        .subscribe( res => {\n\t\t        });\n\t\t    formulario.reset();\n    \t\tthis.new = false;\n\t\t}\n\t}\n/*\n\teditarCliente(_id: string){\n\t\tthis.new = true;\n\t\tthis.edit = true;\n\n//\t\tthis.formGroup.get['cliente'].disable();\n//\t    this.formGroup.get['nit'].disable();\n//\t    this.formGroup.get['nombre'].disable();\n\n\t\tthis.operationService.getClient(_id)\n\t       .subscribe( res =>{\n\t\t         this.operationService.selectedClient = res as Client;\n\t       \tconsole.log(this.operationService.selectedClient._id);\n\t\t         this.formGroup.controls['cliente'].setValue(this.operationService.selectedClient._id);\n\t\t         this.formGroup.controls['nit'].setValue(this.operationService.selectedClient.nit);\n\t\t         this.formGroup.controls['nombre'].setValue(this.operationService.selectedClient.nombre);\n\t\t         this.formGroup.controls['responsable'].setValue(this.operationService.selectedClient.responsable);\n\t\t         this.formGroup.controls['telefono'].setValue(this.operationService.selectedClient.telefono);\n\t\t         this.formGroup.controls['mail'].setValue(this.operationService.selectedClient.mail);\n\t\t       }\n\t\t    );\n\t}*/\n\n\tlistarClienteNit(formulario?:NgForm){\n\t\tif(formulario.value.searchNit){\n\t\t\tthis.operationService.getClientByNit(formulario.value.searchNit)\n\t\t\t\t.subscribe( res =>{\n\t\t\t\t  this.operationService.clientList = [];\n\t\t\t\t  this.operationService.selectedClient = res as Client;\n\t\t\t\t  this.operationService.clientList.push(this.operationService.selectedClient);\n\t\t\t\t  this.listarMercancia(this.operationService.selectedClient._id);\n\t\t\t\t},\n\t\t\t\t(error):void =>{\n\t\t\t\t\tconsole.log(\"Error busqueda de Nit.\");\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t},\n\t\t\t\t()=>{}\n\t\t\t\t);\n\t\t}else{\n\t\t\tthis.listarClientes();\n\t\t}\n\t\tformulario.reset();\n\t}\n\n\tlistarMercancia(_id:string){\n\t\tthis.operationService.getClient(_id)\n\t\t\t.subscribe( res =>{\n\t\t\t\tthis.operationService.selectedClient = res as Client;\n\t\t\t\tthis.operationService.getMerchandises(_id)\n\t\t\t\t\t.subscribe( res =>{\n\t\t\t\t\t\tconsole.log(res);\n\t\t\t\t\t\tthis.operationService.selectedClient.mercancia = res;\n\t\t\t\t\t},\n\t\t\t\t\t\t(error):void =>{\n\t\t\t\t\t\t\tconsole.log(\"error de Mercancia\");\n\t\t\t\t\t\t\tconsole.log(error);\n\t\t\t\t\t\t},\n\t\t\t\t\t\t()=>{});\n\t\t\t},\n\t\t\t\t(error):void =>{\n\t\t\t\t\tconsole.log(\"error de Cliente\");\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t},\n\t\t\t\t()=>{}\n\t\t\t);\n\t}\n\n\tregresar(){\n\t\tthis.location.back();\n\t}\n\n}\n","<div *ngIf=\"!new\" class=\"container\">\n    <ol class=\"breadcrumb color\">\n        <li><a type=\"button\" (click)=\"regresar()\"> Inicio</a></li>\n        <li class=\"active\"> - Búsqueda de mercancía</li>\n    </ol>\n    <h3 class=\"text-center\">Búsqueda de mercancía por cliente</h3>\n    <hr>\n    <div class=\"row\">\n        <aside class=\"col-sm-4\">\n            <h4 class=\"text-center\">Lista clientes</h4>\n            <hr>\n            <div class=\"d-flex flex-row\">\n                <form #searchForm=\"ngForm\" (ngSubmit)=\"listarClienteNit(searchForm)\">\n                    <div class=\"input-group\">\n                        <!-- USE NIT TO SEARCH -->\n                        <input class=\"form-control\" id=\"search-nit\" name=\"searchNit\" ngModel placeholder=\"Búsqueda por NIT\">\n                        <span class=\"input-group-btn\">\n                            <button class=\"btn btn-default\" type=\"submit\" >\n                                <i class=\"glyphicon glyphicon-search\"></i>\n                            </button>\n                        </span>\n                    </div>\n                </form>   \n                <div class=\"ml-auto\">\n                    <button type=\"button\" class=\"btn btn-link\" (click)=\"nuevoCliente()\" >\n                        <i class=\"glyphicon glyphicon-plus tam-color\"> Nuevo</i>\n                    </button>\n                </div>\n            </div><!-- d-flex flex-row.// -->\n            <br>\n            <div class=\"table-responsive\">\n                <table class=\"table table-bordered table-hover\" id=\"mytable\">\n                    <thead>\n                        <tr class=\"success\">\n                            <th>Nit.</th>\n                            <th>Razón social</th>\n                            <th>Acción</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor=\"let cliente of operationService.clientList | paginate:pageSizeClient:pageNumber\">\n                            <input type=\"hidden\" name=\"idClient\" #idClient =\"ngModel\" [(ngModel)]=\"cliente._id\">\n                            <td>{{cliente.nit}}</td>\n                            <td>{{cliente.nombre}}</td>\n                            <td>\n                                <div class=\"btn-group\">\n                                    <a class=\"btn btn-primary btn-sm\" (click)=\"listarMercancia(cliente._id)\">\n                                        <i class=\"fas fa-eye\"></i>\n                                    </a>\n                                </div>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n                <ngb-pagination class=\"d-flex justify-content-end\" [collectionSize]=\"operationService.clientList.length\" [(page)]=\"pageNumber\" [pageSize]=\"pageSizeClient\" [maxSize]=\"3\" [rotate]=\"true\"></ngb-pagination>\n            </div><!--table-responsible.//-->\n        </aside><!--col.//-->\n\n        <aside class=\"col-sm-8\">\n            <br>\n            <div class=\"table-responsive\">\n                <table class=\"table table-condensed\">\n                    <thead>\n                        <tr class=\"success\">\n                            <th>Código</th>\n                            <th>Nombre</th>\n                            <th>Lote</th>\n                            <th>Cantidad</th>\n                            <th>Código ONU</th>\n                            <th>Fecha de caducidad</th>\n                        </tr>\n                    </thead>\n                    <tbody *ngIf=\"operationService.selectedClient\">\n                        <tr *ngFor=\"let mercancia of operationService.selectedClient.mercancia | paginate:pageSize:pageNumber\">\n                            <td>{{mercancia.code}}</td>\n                            <td>{{mercancia.referencia}}</td>\n                            <td>{{mercancia.lote}}</td>\n                            <td>{{mercancia.cantidad}}</td>\n                            <td>{{mercancia.codigo_ONU}}</td>\n                            <td *ngIf=\"mercancia.fecha_caducidad\">\n                                {{mercancia.fecha_caducidad.substring(0,10)}}\n                            </td>\n                            <td *ngIf=\"!mercancia.fecha_caducidad\">\n                                {{mercancia.fecha_caducidad}}\n                            </td>\n                        </tr>                        \n                    </tbody>\n                </table>\n                <ngb-pagination *ngIf=\"operationService.selectedClient\" class=\"d-flex justify-content-end\" [collectionSize]=\"operationService.selectedClient.mercancia.length\" [(page)]=\"pageNumber\" [pageSize]=\"pageSize\" [maxSize]=\"3\" [rotate]=\"true\"></ngb-pagination>\n            </div><!--table-responsible.//-->\n        </aside><!-- col.// -->\n    </div><!-- row.// -->\n</div><!--container.//-->\n\n<!-- Agregar cliente -->\n<div *ngIf=\"new\" class=\"container\">\n    <div class=\"d-flex justify-content-center h-100\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h3 class=\"text-center\">Agregar cliente</h3>\n            </div>\n            <article class=\"card-body\">\n                <form [formGroup]=\"formGroup\" (ngSubmit)=\"registrarCliente(formGroup)\">\n                    <div class=\"form-row\"> \n                        <div class=\"form-group col-sm-6\">\n                            <label>Nit.</label>\n                            <input type=\"number\" formControlName=\"nit\" class=\"form-control\" placeholder=\"NIT\" [ngClass]=\"{ 'is-invalid': submitted && f.nit.errors }\">\n                            <div *ngIf=\"submitted && f.nit.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.nit.errors.required\">\n                                    Por favor, ingresa el nit de la empresa\n                                </div>\n                            </div>\n                        </div><!-- form-group col-sm-6.// -->\n                        <div class=\"form-group col-sm-6\">\n                            <label>Razón social</label>\n                            <input type=\"text\" formControlName=\"nombre\" class=\"form-control\" placeholder=\"Nombre\" [ngClass]=\"{ 'is-invalid': submitted && f.nombre.errors }\">\n                            <div *ngIf=\"submitted && f.nombre.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.nombre.errors.required\">\n                                    Por favor, ingresa la razón social de la empresa\n                                </div>\n                            </div>\n                        </div><!-- form-group col-sm-6.// -->\n                    </div><!-- form-row.// -->\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-sm-12\">\n                            <label>Responsable</label>\n                            <input type=\"text\" formControlName=\"responsable\" class=\"form-control\" placeholder=\"Ej: Juan Perez\" [ngClass]=\"{ 'is-invalid': submitted && f.responsable.errors }\">\n                            <div *ngIf=\"submitted && f.responsable.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.responsable.errors.required\">\n                                    Por favor, ingresa el nombre de contacto\n                                </div>\n                            </div>\n                        </div><!-- form-group col-sm-12.// -->\n                        <div class=\"form-group col-sm-12\">\n                          <label>Contacto</label>\n                          <input type=\"number\" formControlName=\"telefono\" class=\"form-control\" min=\"0\" placeholder=\"1-(555)-555-5555\" [ngClass]=\"{ 'is-invalid': submitted && f.telefono.errors }\">\n                            <div *ngIf=\"submitted && f.telefono.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.telefono.errors.required\">\n                                    Por favor, ingresa el número de contacto\n                                </div>\n                            </div>\n                        </div><!-- form-group col-sm-12.// -->\n                        <div class=\"form-group col-sm-12\">\n                          <label>Correo electrónico</label>\n                          <input type=\"mail\" formControlName=\"mail\" class=\"form-control\" placeholder=\"@correo\" [ngClass]=\"{ 'is-invalid': submitted && f.mail.errors }\">\n                            <div *ngIf=\"submitted && f.telefono.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.telefono.errors.required\">\n                                    Por favor, ingresa un e-mail valido\n                                </div>\n                            </div>\n                        </div><!-- form-group col-sm-12.// -->\n                    </div><!-- form-row.// -->\n                    <div class=\"form-action-row col text-center\" >\n                        <button type=\"submit\" class=\"btn btn-primary btn-sm\">\n                            <span class=\"glyphicon glyphicon-floppy-disk\"></span> Guardar\n                        </button>\n                        <button type=\"button\" class=\"btn btn-danger btn-sm\" (click)=\"cancelar()\"> Cancelar</button>  \n                    </div><!-- form-row.// -->\n                </form>\n            </article><!-- card-body.// -->\n        </div><!-- card.// -->\n    </div><!-- d-flex justify-content-center h-100.// -->\n</div><!--container.//-->","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LoginService } from '../Services/login.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginGuard implements CanActivate {\n  constructor(private router:Router,\n    private login:LoginService){  }\n\ncanActivate(\nnext: ActivatedRouteSnapshot,\nstate: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\nif(this.login.flag){\nreturn true;\n}else{\nthis.router.navigate(['/login']);\nreturn false;\n}\n}\n}\n","export class Client {\n\t_id:string;\n    nombre:string;\n\tnit:string;\n    responsable:string;\n    telefono:string;\n    mail:string;\n    mercancia:any = [];\n    entradas:any = [];\n    salidas:any = [];\n\n    constructor(nombre = '', nit = '', responsable = '',\n    \ttelefono = '', mail = '', mercancia=[],entradas=[],salidas=[]){\n        this.nombre = nombre;\n        this.nit = nit;\n        this.responsable = responsable;\n        this.telefono = telefono;\n        this.mail = mail;\n        this.mercancia=mercancia;\n        this.entradas=entradas;\n        this.salidas=salidas;\n    }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'paginate'\n})\nexport class PaginatePipe implements PipeTransform {\n\n  transform(array: any[], pageSize:any, pageNumber:number): any[] {\n  \t\n  \tif(!array.length){\n  \t\treturn [];\n  \t}\n\n    if (pageSize === 'all') {\n    \treturn array;\n    }\n\n    pageSize = pageSize || 5;\n    pageNumber = pageNumber || 1;\n    --pageNumber;\n    // @ts-ignore\n    return array.slice(pageNumber * pageSize, (pageNumber + 1) * pageSize);\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AngularFireAuth } from '@angular/fire/auth';\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  flag: boolean;\n\n  constructor(public angularFireAuth: AngularFireAuth,\n              private router: Router) {\n  \t\t\t\tthis.flag = false;\n              }\n\n              \n  logOut(){\n    this.angularFireAuth.auth.signOut;\n    this.router.navigate(['/']);\n    this.flag = false;\n  }\n\n}\n","import { Injectable, Input } from '@angular/core';\nimport { Client } from '../Models/client';\nimport { Merchandise } from '../Models/merchandise';\nimport { HttpClient } from '@angular/common/http';\n@Injectable({\n  providedIn: 'root'\n})\nexport class OperationService {\n  clientList: Client[];\n\tselectedClient: Client;\n\treadonly indexRoute = 'http://localhost:3000/api/rest/sglam';\n\treadonly receiptRoute = 'http://localhost:3000/api/rest/sglam/entradas';\n\treadonly outletRoute = 'http://localhost:3000/api/rest/sglam/salidas';\n   \n  constructor(private http:HttpClient) {\n    this.clientList = [];\n    this.selectedClient = new Client();\n   }\n\n  getClients() {\n  \treturn this.http.get( this.indexRoute );\n  }\n\n  getClient( _id: string) {\n  \treturn this.http.get( this.indexRoute + `/${_id}` );\n  }\n\n  postClient( client: Client) {\n  \treturn this.http.post( this.indexRoute, client);\n  }\n\n  putClient( client: Client) {\n  \treturn this.http.post( this.indexRoute + `/${client._id}`, client);\n  }\n\n  deleteClient( _id: string) {\n  \treturn this.http.delete( this.indexRoute + `/${_id}`);\n  }\n\n  getMerchandises( _id: string) {\n    //this.http.patch\n    return this.http.get( this.indexRoute + `/mercancias/${_id}` );\n  }\n\n  getClientByNit( nit: string) {\n  \treturn this.http.get( this.indexRoute +'/search/'+ `${nit}`);\n  }\n\n  getReceipts( _id: string) {\n  \treturn this.http.get( this.receiptRoute + `/${_id}` );\n  }\n\n  postReceipt( receipt: Merchandise) {\n  \treturn this.http.put( this.receiptRoute + `/${receipt.cliente}`, receipt );\n  }\n\n  getOutlets( _id: string) {\n  \treturn this.http.get( this.outletRoute + `/${_id}` );\n  }\n\n  postOutlet(outlet: Merchandise) {\n  \treturn this.http.put( this.outletRoute + `/${outlet.cliente}`, outlet );\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ManagerComponent } from './Components/manager/manager.component';\nimport { LoginGuard } from './Guard/login.guard';\nimport { ReceiptsComponent } from './Components/receipts/receipts.component';\nimport { OutletsComponent } from './Components/outlets/outlets.component';\nimport { SearchComponent } from './Components/search/search.component';\nimport { ReportsComponent } from './Components/reports/reports.component';\nimport { LoginComponent } from './Components/login/login.component';\n\n\nconst routes: Routes = [{path: 'manager', component: ManagerComponent ,canActivate:[LoginGuard] },\n{path: 'receipts', component:ReceiptsComponent ,canActivate:[LoginGuard] },\n{path: 'outlets', component:OutletsComponent, canActivate:[LoginGuard]},\n{path: 'search', component:SearchComponent, canActivate:[LoginGuard] },\n{path: 'reports', component:ReportsComponent, canActivate:[LoginGuard] },\n{path: 'login', component:LoginComponent}];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LoginService } from './Services/login.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  \n  pickGo:boolean=false;\n  title = 'SGLAM Expreso Andino S.A.';\n\n\n  constructor( private router:Router,\n    public loginService:LoginService){\n//this.pickGo = false;\n}\n\nmanager(){\nthis.router.navigate(['/manager']);\nthis.pickGo = true;\n}\n\nlogin(){\nthis.router.navigate(['/login']);\nthis.pickGo = true;\n}\n\ncerrar(){\nif(this.loginService.flag){\nthis.loginService.logOut();\nthis.pickGo = false;\n}else{\nthis.router.navigate(['/login']);\nthis.pickGo = true;\n}\n}\n\n}\n","<nav class=\"navbar navbar-expand-sm bg-primary navbar-dark fixed-top d-flex justify-content-around\">\n  <!-- Brand -->\n<div class=\"navbar-nav mr-auto\">\n  <li class=\"nav-item active\">\n    <a class=\"nav-link \" role=\"button\" routerlink=\"manager\" routerLinkActive=\"active\" (click)=\"manager()\">\n      <h3>SGALM</h3>\n    </a>\n  </li>\n</div>\n  <!-- Dropdown -->\n<div class=\"navbar-nav\">\n  <div class=\"nav-item dropdown \">\n    <button class=\"nav-link  btn btn-link dropdown-toggle\" type=\"button\" id=\"dropdownMenu\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\">\n      <span class=\"glyphicon glyphicon-user\"> Usuario</span>\n    </button>  \n    <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenu\">\n      <li>\n        <a *ngIf=\"!loginService.flag\" class=\"dropdown-item\" role=\"button\" routerlink=\"manager\" (click)=\"login()\">\n          <i class=\"fas fa-user-edit\"> Log In</i>\n        </a>\n      </li>\n<!--\n      <li>\n        <a class=\"dropdown-item\" href=\"#\">\n          <i class=\"far fa-envelope\"></i> Contact Support\n        </a>\n      </li>\n-->\n      <li>\n        <a *ngIf=\"loginService.flag\" class=\"dropdown-item\" role=\"button\" (click)=\"cerrar()\">\n          <i class=\"fas fa-power-off\"></i> Log Out\n        </a>\n      </li>\n    </ul><!-- dropdown-menu.// -->\n  </div><!-- dropdown.// -->\n</div><!-- navbar-na.// -->\n</nav>\n<div *ngIf=\"!pickGo\" class=\"container\">\n  <section class=\"d-flex justify-content-center h-100\">\n    <div class=\"jumbotron\">\n      <h1>Bienvenido a<br> SGALM</h1>\n        <p>Sistema para la Gestión del Almacenamiento Logístico de Mercancías</p>\n          <button class=\"btn btn-primary float-right\" (click)=\"manager()\">Empezar</button>\n    </div>\n  </section>\n</div>\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AngularFireModule } from '@angular/fire';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './Components/login/login.component';\nimport { ManagerComponent } from './Components/manager/manager.component';\nimport { OutletsComponent } from './Components/outlets/outlets.component';\nimport { ReceiptsComponent } from './Components/receipts/receipts.component';\nimport { ReportsComponent } from './Components/reports/reports.component';\nimport { SearchComponent } from './Components/search/search.component';\nimport { PaginatePipe } from './Pipes/paginate.pipe';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport { environment } from 'src/environments/environment';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    ManagerComponent,\n    OutletsComponent,\n    ReceiptsComponent,\n    ReportsComponent,\n    SearchComponent,\n    PaginatePipe\n  ],\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    AngularFireAuthModule,\n    BrowserModule,\n    AppRoutingModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    HttpClientModule,\n    NgbModule\n//    AngularFireAuth \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase:{\n    apiKey: \"AIzaSyApEpWH3UJSbVKgFp-soap0_7OPOKrbMDk\",\n  authDomain: \"pro-fritos.firebaseapp.com\",\n  databaseURL: \"https://pro-fritos.firebaseio.com\",\n  projectId: \"pro-fritos\",\n  storageBucket: \"pro-fritos.appspot.com\",\n  messagingSenderId: \"564092297108\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}